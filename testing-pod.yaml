k apply -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: test

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
      - name: test-connectivity
        image: docker.io/sebiuo/test-connectivity:1.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8383
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 8383
        #   initialDelaySeconds: 10  # Adjust to your application's startup time
        #   periodSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 8383
        #   initialDelaySeconds: 5   # Adjust based on how quickly your app becomes ready
        #   periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: test-service
  namespace: test
spec:
  selector:
    app: test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8383

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: test
  annotations:
    alb.ingress.kubernetes.io/tags: Environment=TEST,ManagedBy=cloud-services-k8-management
    alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=ncl-eks-lb-logs,access_logs.s3.prefix=logs
spec:
  ingressClassName: alb
  rules:
  - host: 'test-connectivity.eks-management-prod1.nclh.io'
    http:
      paths:
      - backend:
          service:
            name: test-service
            port:
              number: 80
        path: /
        pathType: Prefix
EOF